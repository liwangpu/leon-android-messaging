{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login.component.scss","./src/app/login/login-routing.module.ts","./src/app/login/login.component.html","./src/app/login/login.component.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { IonicModule } from '@ionic/angular';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\nimport { LoginRoutingModule } from './login-routing.module';\n\n@NgModule({\n    declarations: [LoginComponent],\n    imports: [\n        IonicModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        LoginRoutingModule\n    ]\n})\nexport class LoginModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","export default \"<ion-content [fullscreen]=\\\"true\\\">\\n    <form [formGroup]='form'>\\n        <ion-item lines=\\\"none\\\">\\n            <h4>用户登陆</h4>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>用户名</ion-label>\\n            <ion-input type='text' formControlName='username'></ion-input>\\n        </ion-item>\\n        <ion-item>\\n            <ion-label>密码</ion-label>\\n            <ion-input type=\\\"password\\\" formControlName='password'></ion-input>\\n        </ion-item>\\n    </form>\\n\\n    <div class=\\\"buttons\\\">\\n        <ion-button expand=\\\"block\\\" (click)='login()'>登陆</ion-button>\\n    </div>\\n</ion-content>\";","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport * as fromService from '../services';\nimport { Router } from '@angular/router';\nimport { parseUrl } from 'query-string';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoginComponent implements OnInit {\n\n    public form: FormGroup;\n    private returnUrl: string;\n    public constructor(\n        private identitySrv: fromService.IdentityService,\n        private toastController: ToastController,\n        private router: Router,\n        fb: FormBuilder\n    ) {\n        this.form = fb.group({\n            username: ['', [Validators.required]],\n            password: ['', [Validators.required]]\n        });\n    }\n\n    public ngOnInit(): void {\n        let { query } = parseUrl(this.router.url) as any;\n        this.returnUrl = query.return;\n        let lastLoginStr = localStorage.getItem('latest_login');\n        if (lastLoginStr) {\n            this.form.patchValue(JSON.parse(lastLoginStr));\n        }\n    }\n\n    public async login(): Promise<void> {\n        const res: any = await this.identitySrv.login(this.form.value).toPromise();\n        localStorage.setItem('latest_login', JSON.stringify(this.form.value));\n        localStorage.setItem('access_token', res.access_token);\n        localStorage.setItem('refresh_token', res.refresh_token);\n        localStorage.setItem('expires_in', res.expires_in);\n        const toast = await this.toastController.create({\n            message: '登陆成功',\n            duration: 2000\n        });\n        toast.present();\n        await this.router.navigateByUrl(this.returnUrl ? decodeURIComponent(this.returnUrl) : '/');\n    }\n}\n"],"sourceRoot":"webpack:///"}